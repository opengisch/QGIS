<?xml version="1.0"?>
<!-- The package name -->
<typesystem package="core">
    <!-- Pre-defined typesystem that contains types used by our class.
        PySide has one typesystem for each module, so here we use only the
        Widgets typesystem because it already includes gui and core
        typesystems -->
    <load-typesystem name="typesystem_core.xml" generate="no"/>
    <!--<load-typesystem name="typesystem_widgets.xml" generate="no"/>-->

    <!-- This is used in a public virtual pure function.
         We need to declare it otherwise shiboken will ignore the
         function and will fail to create a wrapper -->
    <!--<primitive-type name="DropAreaWithCentralFrame"/>-->

    <!-- Export our public enums and flags -->
    <!--<enum-type name="Location"/>-->

    <!-- Export our classes
         For classes we can use two types:
            object-type: class that does not have a copy-constructor
                         and cannot be passed as value to functions;
            value-type: class that can be passed as value for functions

         Here we only use 'object-type' since all our classes are
         derived from QWidget.
     -->

    <!-- DockWidgetBase contains an internal enum, so we declare it
         inside of the object-type -->

    <object-type name="QgsWkbTypes" >
        <enum-type name="GeometryType"/>
        <enum-type name="Type"/>
    </object-type>

    <object-type name="QgsUnitTypes" >
    </object-type>

    <value-type name="QgsField">
    </value-type>

    <value-type name="QgsInterval">
    </value-type>



</typesystem>
